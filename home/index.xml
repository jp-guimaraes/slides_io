<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Homes on Entrada e Saída</title>
    <link>https://jp-guimaraes.github.io/slides_io/home/</link>
    <description>Recent content in Homes on Entrada e Saída</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://jp-guimaraes.github.io/slides_io/home/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://jp-guimaraes.github.io/slides_io/home/01_intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jp-guimaraes.github.io/slides_io/home/01_intro/</guid>
      <description> Objetivos Conhecer a organização básica de entrada e saída
Conhecer os métodos de transferências de dados
 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://jp-guimaraes.github.io/slides_io/home/02_interconexoes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jp-guimaraes.github.io/slides_io/home/02_interconexoes/</guid>
      <description> Principios básicos  Classificação quanto ao sentido do fluxo de dados
Dispositivos (periféricos) de Entrada
Dispositivos de Saída
Dispositivos Híbridos
 Estudando a comunicação CPU - Periféricos
 Problemas Cada dispositivo tem:
 Conexões físicas Sentido de conexão Velocidades diferentes Requisitos diferentes Fabricantes diferentes   Possíveis soluções Hardware controlador dedicado
Interface CPU periférico
 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://jp-guimaraes.github.io/slides_io/home/03_exemplo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jp-guimaraes.github.io/slides_io/home/03_exemplo/</guid>
      <description> Estudo de caso  Comunicação CPU - HD
 Função da Controladora
Conexão física
Conversão de protocolos de comunicação
Conversão de tipos de dados
Buffer - armazenamento temporário
 Exemplo 2: Comunicação CPU - Teclado/mouse
 CPU - Controlador Comunicação via software
 antigamente&amp;hellip;
BIOS
 Atualmente
Driver
Sistema Operacional: Gerenciador de dispositivos
Hardware: Chipset
 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://jp-guimaraes.github.io/slides_io/home/04_comunicacao/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jp-guimaraes.github.io/slides_io/home/04_comunicacao/</guid>
      <description> Comunicação  Requisitos
Endereço
Comandos
Dados
 Modelos de troca de dados Assíncrono
Síncrono
Semi-síncrono
 Assíncrono Dois sistemas digitais autônomos
Clocks não sincronizados
 Síncrona Mesmo Clock para CPU e periférico
Clock diferente de frequência
Tempo de transferência calculado
 Semi-síncrona Mesmo Clock para CPU e periférico
Clock diferente de frequência
Tempo de transferência desconhecido
 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://jp-guimaraes.github.io/slides_io/home/05_mapeamento_modos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jp-guimaraes.github.io/slides_io/home/05_mapeamento_modos/</guid>
      <description>Endereçamento  Em memória: - reserva de posições específicas de memória para periféricos
Em portas de entrada/saída - Acesso direto ao dispositivo
 Comunicação Modos de transferência
 Requisitos:
 Respostas rápidas a eventos críticos Não sobrecarregar CPU com IO   Modos Comunicação programada
Rotina é responsável pela transferência de dados para o dispositivo de I/O
Comunicação por interrupução
Hardware sinaliza quando é hora de fazer uma transferência de dados</description>
    </item>
    
    <item>
      <title></title>
      <link>https://jp-guimaraes.github.io/slides_io/home/06_usb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jp-guimaraes.github.io/slides_io/home/06_usb/</guid>
      <description>Estudo de caso  USB
Universal Serial Bus
Barramento serial Universal
  Transferência de Controle Transferências em Massa Transferências de Interrupção Transferências Isócronas:   Transferência de Controle
 Usada para tarefas de configuração e comando. Inicializa o dispositivo quando é conectado. Pode ser usada para comandos ad hoc durante a operação normal.   Transferências em Massa
 Usada para transferir grandes quantidades de dados não cronometrados. Garante a entrega dos dados, mas não o tempo de entrega.</description>
    </item>
    
  </channel>
</rss>
